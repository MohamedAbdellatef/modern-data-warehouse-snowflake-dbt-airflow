version: 2

models:
  - name: stg_customers
    description: "Lightly cleaned customers from CRM (hygiene only)."
    columns:
      - name: customer_id
        description: "Natural customer id from CRM."
        tests:
          - not_null
          - unique

      - name: loyalty_tier
        description: "Loyalty tier text."

      - name: is_vip_flag
        description: "VIP flag (boolean)."
        tests:
          - accepted_values:
              arguments:
                values: [true, false]

      - name: source_system
        description: "Source system code (normalized)."

      - name: registration_ts
        description: "Registration timestamp."

      - name: first_purchase_ts
        description: "First purchase timestamp."

      - name: country_code
        description: "ISO country code (uppercased)."
        tests:
          - accepted_values:
              arguments:
                values: ["UAE", "KSA"]

      - name: city
        description: "Customer city (initcap)."

      - name: email_optin_flag
        description: "Marketing opt-in (boolean)."
        tests:
          - accepted_values:
              arguments:
                values: [true, false]

      - name: birth_date
        description: "Date of birth."

      - name: ingestion_date
        description: "Landing time from RAW."
        tests:
          - not_null

  - name: stg_fx_rates_daily
    description: "Daily FROM_CCYâ†’AED rates (one row per currency per date)."
    columns:
      - name: fx_date
        tests:
          - not_null

      - name: currency_code
        description: "FROM currency code."
        tests:
          - not_null

      - name: conversion_rate_to_aed
        description: "Rate to AED; must be > 0."
        tests:
          - not_null
          - positive:
              arguments:
                column_name: conversion_rate_to_aed

      - name: _to_ccy
        description: "TO currency (should be AED)."
        tests:
          - accepted_values:
              arguments:
                values: ["AED"]

      - name: load_date
        tests:
          - not_null

    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns: [fx_date, currency_code]

  - name: stg_order_items
    description: "Normalized order line items."
    columns:
      - name: order_number
        tests:
          - not_null
          - relationships:
              arguments:
                to: ref('stg_orders')
                field: order_number
      - name: line_number
        tests: [not_null]

      - name: store_id
        tests:
          - not_null
          - relationships:
              arguments:
                to: ref('stg_stores')
                field: store_id

      - name: sku
        tests:
          - not_null
          - relationships:
              arguments:
                to: ref('stg_products')
                field: sku

      - name: quantity
        tests:
          - non_negative:
              arguments:
                column_name: quantity

      - name: unit_price
        tests:
          - non_negative:
              arguments:
                column_name: unit_price

      - name: gross_amount
        tests:
          - not_null
          - non_negative:
              arguments:
                column_name: gross_amount

      - name: vat_amount
        tests:
          - not_null
          - non_negative:
              arguments:
                column_name: vat_amount

      - name: net_amount
        tests:
          - not_null
          - non_negative:
              arguments:
                column_name: net_amount

      - name: currency_code
        tests:
          - accepted_values:
              arguments:
                values: ["AED", "SAR"]

      - name: order_local_ts
        tests: [not_null]

      - name: load_date
        tests: [not_null]

    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns: [order_number, line_number]


  - name: stg_orders
    description: "Order headers (per order)."
    columns:
      - name: order_number
        tests: [not_null, unique]

      - name: customer_id_nat
        tests:
          - relationships:
              arguments:
                to: ref('stg_customers')
                field: customer_id

      - name: store_id
        tests:
          - relationships:
              arguments:
                to: ref('stg_stores')
                field: store_id

      - name: channel_code
        tests:
          - accepted_values:
              arguments:
                values: ["POS", "WEB", "MARKETPLACE"]

      - name: final_status
        tests:
          - accepted_values:
              arguments:
                values: ["COMPLETED", "FULFILLED", "CANCELLED"]

      - name: order_local_ts
        tests: [not_null]

      - name: load_date
        tests: [not_null]

  - name: stg_payments
    description: "Payments from PSP."
    columns:
      - name: payment_id
        tests: [not_null, unique]

      - name: order_number
        tests:
          - not_null
          - relationships:
              arguments:
                to: ref('stg_orders')
                field: order_number
                where:  "payment_status = 'COMPLETED' AND order_number <> 'ORD99999999'"

      - name: store_id
        tests:
          - not_null
          - relationships:
              arguments:
                to: ref('stg_stores')
                field: store_id

      - name: payment_type
        tests:
          - accepted_values:
              arguments:
                values: ["CAPTURE", "REFUND"]

      - name: payment_status
        tests:
          - accepted_values:
              arguments:
                values: ["COMPLETED", "FAILED"]

      - name: payment_method
        tests:
          - accepted_values:
              arguments:
                values: ["VISA", "MASTERCARD", "WALLET", "BNPL", "CASH"]

      - name: amount_native
        tests:
          - non_negative:
              arguments:
                column_name: amount_native

      - name: fee_native
        tests:
          - non_negative:
              arguments:
                column_name: fee_native

      - name: currency_code
        tests:
          - accepted_values:
              arguments:
                values: ["AED", "SAR"]

      - name: payment_local_ts
        tests: [not_null]

      - name: load_date
        tests: [not_null]

  - name: stg_products
    description: "Product master."
    columns:
      - name: sku
        tests: [not_null, unique]

      - name: vat_class
        tests:
          - accepted_values:
              arguments:
                values: ["STANDARD", "ZERO", "REDUCED"]

      - name: load_date
        tests: [not_null]

  - name: stg_returns
    description: "Returns headers/lines as landed (no SKU test unless column exists)."
    columns:
      - name: return_id
        tests: [not_null, unique]

      - name: order_number
        tests:
          - not_null
          - relationships:
              arguments:
                to: ref('stg_orders')
                field: order_number

      - name: store_id
        tests:
          - not_null
          - relationships:
              arguments:
                to: ref('stg_stores')
                field: store_id

      - name: quantity_returned
        tests:
          - non_negative:
              arguments:
                column_name: quantity_returned

      - name: refund_amount_native
        tests:
          - non_negative:
              arguments:
                column_name: refund_amount_native

      - name: currency_code
        tests:
          - accepted_values:
              arguments:
                values: ["AED", "SAR"]

      - name: return_local_ts
        tests: [not_null]

      - name: load_date
        tests: [not_null]

  - name: stg_store_targets_monthly
    description: "Monthly AED targets per store."
    columns:
      - name: store_id
        tests:
          - not_null
          - relationships:
              arguments:
                to: ref('stg_stores')
                field: store_id

      - name: target_month
        tests: [not_null]

      - name: target_amount_aed
        tests:
          - not_null
          - non_negative:
              arguments:
                column_name: target_amount_aed

      - name: load_date
        tests: [not_null]

    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns: [store_id, target_month]

  - name: stg_stores
    description: "Store master (country/currency/timezone, PHYSICAL/ONLINE)."
    columns:
      - name: store_id
        tests: [not_null, unique]

      - name: store_code
        tests: [not_null, unique]

      - name: country_code
        tests:
          - accepted_values:
              arguments:
                values: ["UAE", "KSA"]

      - name: currency_code
        tests:
          - accepted_values:
              arguments:
                values: ["AED", "SAR"]

      - name: store_type
        tests:
          - accepted_values:
              arguments:
                values: ["PHYSICAL", "ONLINE"]

      - name: open_date
        tests: [not_null]

      - name: load_date
        tests: [not_null]

  - name: stg_vat_policy
    description: "VAT policy by country (effective_from)."
    columns:
      - name: country_code
        tests:
          - not_null
          - accepted_values:
              arguments:
                values: ["UAE", "KSA"]

      - name: vat_rate
        description: "Decimal rate (e.g., 0.05, 0.15)."
        tests:
          - not_null
          - between_0_1:
              arguments:
                column_name: vat_rate

      - name: effective_from
        tests: [not_null]

      - name: load_date
        tests: [not_null]
